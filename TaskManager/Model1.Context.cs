//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManager
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TaskManagerDbEntities : DbContext
    {
        public TaskManagerDbEntities()
            : base("name=TaskManagerDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Task> Task { get; set; }
        public virtual DbSet<TaskPriority> TaskPriority { get; set; }
        public virtual DbSet<TaskType> TaskType { get; set; }
        public virtual DbSet<TUser> TUser { get; set; }
        public virtual DbSet<TAdmin> TAdmin { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Project> Project { get; set; }
        public virtual DbSet<Comment> Comment { get; set; }
    
        public virtual ObjectResult<Sp_Login_Result> Sp_Login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Login_Result>("Sp_Login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Sp_AdminLogin_Result> Sp_AdminLogin(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_AdminLogin_Result>("Sp_AdminLogin", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Sp_ListTask_Result1> Sp_ListTask()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ListTask_Result1>("Sp_ListTask");
        }
    
        public virtual ObjectResult<string> Sp_Personnel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Personnel");
        }
    
        public virtual ObjectResult<Sp_GetTask_Result> Sp_GetTask(Nullable<System.Guid> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTask_Result>("Sp_GetTask", useridParameter);
        }
    
        public virtual ObjectResult<string> Sp_Priority(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Priority", userIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetTaskforManager_Result5> Sp_GetTaskforManager()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTaskforManager_Result5>("Sp_GetTaskforManager");
        }
    }
}
